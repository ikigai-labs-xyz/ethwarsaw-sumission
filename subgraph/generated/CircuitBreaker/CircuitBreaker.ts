// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CircuitBreakerStatusUpdate extends ethereum.Event {
  get params(): CircuitBreakerStatusUpdate__Params {
    return new CircuitBreakerStatusUpdate__Params(this);
  }
}

export class CircuitBreakerStatusUpdate__Params {
  _event: CircuitBreakerStatusUpdate;

  constructor(event: CircuitBreakerStatusUpdate) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newStatus(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ParameterChanged extends ethereum.Event {
  get params(): ParameterChanged__Params {
    return new ParameterChanged__Params(this);
  }
}

export class ParameterChanged__Params {
  _event: ParameterChanged;

  constructor(event: ParameterChanged) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newParameter(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CircuitBreaker__getSecurityParameterConfigOfResult {
  value0: i32;
  value1: BigInt;

  constructor(value0: i32, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set(
      "value0",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value0))
    );
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): i32 {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class CircuitBreaker extends ethereum.SmartContract {
  static bind(address: Address): CircuitBreaker {
    return new CircuitBreaker("CircuitBreaker", address);
  }

  decreaseParameter(decreaseAmount: BigInt): boolean {
    let result = super.call(
      "decreaseParameter",
      "decreaseParameter(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(decreaseAmount)]
    );

    return result[0].toBoolean();
  }

  try_decreaseParameter(decreaseAmount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "decreaseParameter",
      "decreaseParameter(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(decreaseAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getCircuitBreakerStatusOf(user: Address): boolean {
    let result = super.call(
      "getCircuitBreakerStatusOf",
      "getCircuitBreakerStatusOf(address):(bool)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBoolean();
  }

  try_getCircuitBreakerStatusOf(user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getCircuitBreakerStatusOf",
      "getCircuitBreakerStatusOf(address):(bool)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  getParameterOf(user: Address): BigInt {
    let result = super.call(
      "getParameterOf",
      "getParameterOf(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_getParameterOf(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getParameterOf",
      "getParameterOf(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSecurityParameterConfigOf(
    user: Address
  ): CircuitBreaker__getSecurityParameterConfigOfResult {
    let result = super.call(
      "getSecurityParameterConfigOf",
      "getSecurityParameterConfigOf(address):(uint8,uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return new CircuitBreaker__getSecurityParameterConfigOfResult(
      result[0].toI32(),
      result[1].toBigInt()
    );
  }

  try_getSecurityParameterConfigOf(
    user: Address
  ): ethereum.CallResult<CircuitBreaker__getSecurityParameterConfigOfResult> {
    let result = super.tryCall(
      "getSecurityParameterConfigOf",
      "getSecurityParameterConfigOf(address):(uint8,uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CircuitBreaker__getSecurityParameterConfigOfResult(
        value[0].toI32(),
        value[1].toBigInt()
      )
    );
  }

  increaseParameter(increaseAmount: BigInt): boolean {
    let result = super.call(
      "increaseParameter",
      "increaseParameter(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(increaseAmount)]
    );

    return result[0].toBoolean();
  }

  try_increaseParameter(increaseAmount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "increaseParameter",
      "increaseParameter(uint256):(bool)",
      [ethereum.Value.fromUnsignedBigInt(increaseAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  setParameter(newParameter: BigInt): boolean {
    let result = super.call("setParameter", "setParameter(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(newParameter)
    ]);

    return result[0].toBoolean();
  }

  try_setParameter(newParameter: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("setParameter", "setParameter(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(newParameter)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class DecreaseParameterCall extends ethereum.Call {
  get inputs(): DecreaseParameterCall__Inputs {
    return new DecreaseParameterCall__Inputs(this);
  }

  get outputs(): DecreaseParameterCall__Outputs {
    return new DecreaseParameterCall__Outputs(this);
  }
}

export class DecreaseParameterCall__Inputs {
  _call: DecreaseParameterCall;

  constructor(call: DecreaseParameterCall) {
    this._call = call;
  }

  get decreaseAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DecreaseParameterCall__Outputs {
  _call: DecreaseParameterCall;

  constructor(call: DecreaseParameterCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class IncreaseParameterCall extends ethereum.Call {
  get inputs(): IncreaseParameterCall__Inputs {
    return new IncreaseParameterCall__Inputs(this);
  }

  get outputs(): IncreaseParameterCall__Outputs {
    return new IncreaseParameterCall__Outputs(this);
  }
}

export class IncreaseParameterCall__Inputs {
  _call: IncreaseParameterCall;

  constructor(call: IncreaseParameterCall) {
    this._call = call;
  }

  get increaseAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreaseParameterCall__Outputs {
  _call: IncreaseParameterCall;

  constructor(call: IncreaseParameterCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetCircuitBreakerStatusCall extends ethereum.Call {
  get inputs(): SetCircuitBreakerStatusCall__Inputs {
    return new SetCircuitBreakerStatusCall__Inputs(this);
  }

  get outputs(): SetCircuitBreakerStatusCall__Outputs {
    return new SetCircuitBreakerStatusCall__Outputs(this);
  }
}

export class SetCircuitBreakerStatusCall__Inputs {
  _call: SetCircuitBreakerStatusCall;

  constructor(call: SetCircuitBreakerStatusCall) {
    this._call = call;
  }

  get newStatus(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetCircuitBreakerStatusCall__Outputs {
  _call: SetCircuitBreakerStatusCall;

  constructor(call: SetCircuitBreakerStatusCall) {
    this._call = call;
  }
}

export class SetParameterCall extends ethereum.Call {
  get inputs(): SetParameterCall__Inputs {
    return new SetParameterCall__Inputs(this);
  }

  get outputs(): SetParameterCall__Outputs {
    return new SetParameterCall__Outputs(this);
  }
}

export class SetParameterCall__Inputs {
  _call: SetParameterCall;

  constructor(call: SetParameterCall) {
    this._call = call;
  }

  get newParameter(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetParameterCall__Outputs {
  _call: SetParameterCall;

  constructor(call: SetParameterCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class SetUserConfigCall extends ethereum.Call {
  get inputs(): SetUserConfigCall__Inputs {
    return new SetUserConfigCall__Inputs(this);
  }

  get outputs(): SetUserConfigCall__Outputs {
    return new SetUserConfigCall__Outputs(this);
  }
}

export class SetUserConfigCall__Inputs {
  _call: SetUserConfigCall;

  constructor(call: SetUserConfigCall) {
    this._call = call;
  }

  get thresholdPercentage(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get blockInterval(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get startParameter(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get cooldownPeriod(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SetUserConfigCall__Outputs {
  _call: SetUserConfigCall;

  constructor(call: SetUserConfigCall) {
    this._call = call;
  }
}
